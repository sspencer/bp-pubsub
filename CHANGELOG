Version 0.3.1
  * Clean up Ruby code with simplification, reorganization, and documentation

Version 0.3.0
  * added mandatory "targetOrigin" to postMessge().  This sends message to listeners on 
    specified domain only.
  * Note that "origin" in addListener is not per HTML5, but a convenience filter so you
    don't have to do the same in JavaScript.

Version 0.2.1
  * postMessage strips out all non "data" types ... allowing: (Object, Array, String, Boolean, 
    Integer, Float, Boolean, Null).  In other words, strips out BrowserPlus File and Callback
    objects.

Version 0.2.0
  * postMessage now takes "any" rather than "map" (json object)
  * index.html demo now can send message as String, Array, or Object

Version 0.1.0
  * API now inspired by HTMl5 cross document messaging - addListener, postMessage
  * No more "topic" - instead, messages filtered by "origin" (domain like "http://example.com")

Version 0.0.5
  * Copy observer code into PSData so it handles case where service goes away.
  * Add bp_log function to test.rb.

Version 0.0.4
  * Callbacks are invalidated after bp.complete(), so addSubscriber no longer returns
    unique ID.  Delete removeSubscriber() api.
  * Simple case works.  Tested on OS X.  Can open one or more windows in both Safari
    and Firefox and send messages across all browsers/windows.
  * If a window goes away, messages no longer sent.  Might have to write an
    Observer to rescue failures.

Version 0.0.3
  * Code is mostly there, but callback is not invoked.

